//// 핵심 요약
   
1. 식이 끝난 후 계속 존재하는 갑은 좌측 값, 식이 끝나면 존재하지 않는 임시값은 우측값
2. '&'을 사용한 참조를 정확하게는 'Lvalue Reference' 라고 부른다. 사용 방법은 기존의 참조와 비슷하여 참조가 '&'을 사용햇듯이 ' &&'를 사용
3. 좌측값 참조는 좌측값을 참조하고, 우측 값 참조는 우측 값을 참조한다.
4. 불필요한 복사를 없앨 수 있는 것은 바로 우측 값 참조의 Move semantics 덕택.
   Move semantics에 의해서 C++0x에서는 기존에 없는 'move 생성자','move 대입 연산자'라는 것이 생겼음
5. 'move 생성자' 'move 연산자'는 암묵적으로는 만들어지지 않으면 '복사 생성자'가 'move 생성자'보다 우선순위가 높고,
   '대입 연산자'가 'move 대입 연산자'보다 우선 순위가 높다.
6. 표준 라이브러리에서 제공하는 std::move를 사용하면 좌측 값을 우측 값으로 타입 캐스팅 할 수 있다.
7. 우측 값 참조와 좌측 값 참조는 타입이 다르므로 함수 오버로드를 적용할 수 있다.
8. 우측 값 참조는 우측 값이 아니다.
9. std::forward 함수는 좌측 값은 좌측 값으로, 우측 값은 우측 값으로 캐스팅 해준다.